{"version":3,"sources":["images/error.svg","helpers/auth.js","helpers/routes.js","routes/privateroute.js","routes/notfound.js","components/modular/form.js","components/modular/input.js","components/modular/button.js","components/forms/signin.js","components/modular/modal.js","helpers/fetch.js","actions/useraction.js","actions/actiontypes.js","routes/signin.js","helpers/validator.js","components/forms/signup.js","routes/signup.js","routes/signout.js","components/modular/select.js","components/forms/newlist.js","components/modular/emoji.js","components/modular/aside.js","routes/newlist.js","actions/itemaction.js","components/modular/table.js","routes/main.js","components/modular/container.js","components/modular/nav.js","components/modular/navbar.js","App.js","serviceWorker.js","reducers/index.js","reducers/userreducer.js","reducers/itemreducer.js","index.js","configurestore.js"],"names":["module","exports","isAuthenticated","key","user","getDataStorage","id","email","token","saveDataStorage","data","window","localStorage","setItem","JSON","stringify","parse","getItem","removeStorage","removeItem","routes","baseLink","location","host","links","base","new","signup","signin","verify","PrivateRoute","children","rest","render","to","pathname","state","from","NotFound","className","src","Error","alt","Form","title","onSubmit","e","preventDefault","Input","type","value","changer","text","name","htmlFor","onChange","placeholder","Button","color","size","handler","onClick","defaultProps","Holder","handleSubmit","currentTarget","Modal","code","setCode","verifySign","split","onKeyPress","a","max","b","min","c","d","getData","link","fetch","headers","Headers","container","json","response","sendData","body","method","toggleLogged","logged","connect","ownProps","dispatch","actions","useState","userEmail","setUserEmail","redirect","setRedirect","visible","modal","setModal","test","then","parseInt","Signup","userName","setUserName","useEffect","Select","options","map","option","i","section","item","quantity","handleAdd","style","textAlign","marginTop","Emoji","icon","description","role","aria-label","EmojiList","Aside","products","store","submit","expand","product","data-id","handle","width","minLength","required","itemsProps","addItem","clearItem","setStore","setSection","setQuantity","setType","setId","setExpand","ID","useParams","updateStorage","storage","resetFields","restoreStorage","useCallback","length","s","parentId","parentNode","dataset","dataStorage","filter","jsonData","sendLink","push","error","prevCounter","itemDetails","Table","obj","remove","edit","colSpan","Date","updatedAt","toLocaleDateString","Main","itemList","setItemList","setUser","deleteId","setDeleteId","items","showModal","console","log","buyList","list","rebuildList","reload","marginBottom","newList","parseItems","sort","localeCompare","Container","Nav","route","index","descrition","userAction","App","exact","path","Boolean","hostname","match","combineReducers","action","initialState","createStore","rootReducer","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.93d9bf7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.cbc8724a.svg\";","export const isAuthenticated = key => {\n    const user = getDataStorage(key) || {};\n\n    return user.id && user.email && user.token;\n};\n\nexport const saveDataStorage = (key, data) => {\n    if(typeof window !== 'undefined')\n        localStorage.setItem(key, JSON.stringify(data));\n};\n\nexport const getDataStorage = key => {\n    if(typeof window !== 'undefined')\n        return JSON.parse(localStorage.getItem(key));\n}\n\nexport const removeStorage = key => {\n    if(typeof window !== 'undefined')\n        localStorage.removeItem(key);\n}","export const routes = {\n    signin: '/signin',\n    signup: '/signup',\n    signout: '/signout',\n    new: '/new',\n    edit: '/edit/:ID',\n    main: '/'\n};\n\nexport const baseLink = `https://${window.location.host}`;\n\nexport const links = {\n    items: {\n        base: '/item',\n        new: '/new'\n    },\n\n    user: {\n        base: '/user',\n        signup: '/signup',\n        signin: '/signin',\n        verify: '/verifysign'\n    }\n};\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { isAuthenticated } from '../helpers/auth';\nimport { routes } from '../helpers/routes';\n\nexport default function PrivateRoute({ children, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                isAuthenticated('user') ? (\n                    children\n                ) : (\n                        <Redirect\n                            to={{\n                                pathname: routes.signin,\n                                state: { from: location }\n                            }}\n                        />\n                    )\n            }\n        />\n    );\n}","import React from 'react';\n\nimport Error from '../images/error.svg';\n\nexport default function NotFound() {\n    return (\n        <div className='holder--404'>\n            <h1 className='text-danger'>404</h1>\n            <p>Não encontrado!</p>\n\n            <img src={Error} alt='Not Found' />\n        </div>\n    )\n}","import React from 'react';\n\nconst Form = ({ children, title }) => (\n    <form className='form' onSubmit={e => e.preventDefault()}>\n        <h2 className='form__title'>{title}</h2>\n        {children}\n    </form>\n);\n\nexport default Form;","import React from 'react';\n\nconst Input = ({ type, value, changer, text, name}) => (\n    <div className='form__holder--input'>\n        <label htmlFor={name}>{name}</label>\n        <input\n            className='form__input'\n            type={type}\n            value={value}\n            onChange={changer}\n            id={name}\n            placeholder={text}\n        />\n    </div>\n);\n\nexport default Input;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ type, color, size, text, handler }) => (\n    <button\n        className={`button button--${color} button--${size}`}\n        type={type}\n        onClick={handler}\n    >{text}</button>\n);\n\nButton.propTypes = {\n    type: PropTypes.string,\n    color: PropTypes.string,\n    size: PropTypes.string,\n    text: PropTypes.string,\n    handler: PropTypes.func\n};\n\nButton.defaultProps = {\n    handler: () => null,\n    type: 'button',\n    color: 'blue',\n    size: 'small',\n    text: 'Enviar'\n};\n\nexport default Button;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { routes } from '../../helpers/routes';\n\nimport Form from '../modular/form';\nimport Input from '../modular/input';\nimport Button from '../modular/button';\n\nconst Holder = ({ email, handleSubmit }) => (\n    <Form title='Bem vindo de volta!'>\n        <Input\n            type='email'\n            value={email.value}\n            changer={e => email.changer(e.currentTarget.value)}\n            text='Ex.: roberto@gmail.com'\n            name='Email'\n        />\n\n        <Link to={routes.signup} className='anchor'>\n            Ainda não tem uma conta? Crie Agora!\n            </Link>\n\n        <Button\n            type='submit'\n            color='purple'\n            handler={handleSubmit}\n        />\n    </Form>\n);\n\nexport default Holder;","import React from 'react';\n\nimport Button from './button';\n\nconst Modal = ({ children, title, code, setCode, verifySign }) => (\n    <div className='modal'>\n        <div className='modal__container'>\n            <div className='modal__head'>\n                <h3>{title}</h3>\n            </div>\n            <div className='modal__body'>\n                { !children \n                    ? (\n                        <div className='holder--code'>\n                            <input\n                                onChange={e => e.currentTarget.value = e.currentTarget.value.split('')[0]}\n                                onKeyPress={e => setCode({ ...code, a: +e.key })}\n                                type='number'\n                                max={9}\n                                value={code.a}\n                            />\n                \n                            <input\n                                onChange={e => e.currentTarget.value = e.currentTarget.value.split('')[0]}\n                                onKeyPress={e => setCode({ ...code, b: +e.key })}\n                                type='number'\n                                max={9}\n                                min={0}\n                                value={code.b}\n                            />\n                \n                            <input\n                                onChange={e => e.currentTarget.value = e.currentTarget.value.split('')[0]}\n                                onKeyPress={e => setCode({ ...code, c: +e.key })}\n                                type='number'\n                                max={9}\n                                min={0}\n                                value={code.c}\n                            />\n                \n                            <input\n                                onChange={e => e.currentTarget.value = e.currentTarget.value.split('')[0]}\n                                onKeyPress={e => setCode({ ...code, d: +e.key })}\n                                type='number'\n                                max={9}\n                                min={0}\n                                value={code.d}\n                            />\n                        </div>\n                    ) : children\n                }\n                <Button\n                    type='submit'\n                    text='Confirmar'\n                    color='red'\n                    size='large'\n                    handler={verifySign}\n                />\n            </div>\n        </div>\n    </div>\n);\n\nexport default Modal;","export const getData = async (link, token) => {\n    const container = await fetch(link, {\n        headers: new Headers({\n            'x-access-token': token\n        })\n    });\n\n    const response = await container.json();\n\n    return response;\n};\n\nexport const sendData = async (link, body, method, token) => {\n    const container = await fetch(link, {\n        method,\n        body,\n        headers: new Headers({\n            'content-type': 'application/json',\n            'x-access-token': token\n        })\n    });\n\n    const response = await container.json();\n\n    return response;\n};","import * as actions from './actiontypes';\n\nexport const toggleLogged = b => ({\n    type: actions.TOGGLE_LOGGED,\n    logged: b\n});","\nexport const TOGGLE_LOGGED = 'TOOGLE_LOGGED';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\nexport const CLEAR_ITEM = 'CLEAR_ITEM';\nexport const TOGGLE_PAGE = 'TOGGLE_PAGE';","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Holder from '../components/forms/signin';\nimport Modal from '../components/modular/modal';\n\nimport { routes, baseLink, links } from '../helpers/routes';\nimport { sendData } from '../helpers/fetch';\nimport { isEmail } from '../helpers/validator';\nimport { saveDataStorage } from '../helpers/auth';\n\nimport * as actions from '../actions/useraction';\n\nfunction Signin({ toggleLogged }) {\n    const [userEmail, setUserEmail] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n    const [code, setCode] = useState({\n        a: 0,\n        b: 0,\n        c: 0,\n        d: 0\n    });\n\n    const [modal, setModal] = useState({\n        title: 'Insira seu código de confirmação',\n        visible: false\n    });\n\n    const verifySign = () => {\n        const { a, b, c, d } = code;\n\n        sendData(\n            baseLink + links.user.base + links.user.verify,\n            JSON.stringify({ code: parseInt(`${a}${b}${c}${d}`), email: userEmail }),\n            'POST'\n        )\n            .then(data => {\n                toggleLogged(true);\n                saveDataStorage('user', data);\n                setRedirect(true);\n            });\n    };\n\n    const handleSubmit = () => {\n        if (isEmail(userEmail)) {\n            sendData(\n                baseLink + links.user.base + links.user.signin,\n                JSON.stringify({ email: userEmail }),\n                'POST'\n            )\n                .then(data => saveDataStorage('user', data));\n\n            setModal({\n                ...modal,\n                visible: true\n            });\n        }\n    };\n\n    return (\n        <>\n            <Holder\n                email={{value: userEmail, changer: setUserEmail}}\n                handleSubmit={handleSubmit}\n            />\n            {modal.visible &&\n                <Modal \n                    title={modal.title}\n                    code={code}\n                    setCode={setCode}\n                    verifySign={verifySign} \n                />\n            }\n\n            {redirect && <Redirect to={routes.main} />}\n        </>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    logged: state.logged\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    toggleLogged: b => dispatch(actions.toggleLogged(b))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","export const isEmail = email => {\n    // eslint-disable-next-line\n    const regex = /\\S+@\\S+\\.\\S+/;\n    const matcher = regex.test(email);\n\n    return matcher;\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { routes } from '../../helpers/routes';\n\nimport Form from '../modular/form';\nimport Input from '../modular/input';\nimport Button from '../modular/button';\n\nconst Holder = ({ name, email }) => (\n    <Form title='Vamos Cadastrar!'>\n        <Input\n            type='text'\n            value={name.value}\n            changer={e => name.changer(e.currentTarget.value)}\n            text='Ex.: Roberto da Silva'\n            name='Name'\n        />\n\n        <Input\n            type='email'\n            value={email.value}\n            changer={e => email.changer(e.currentTarget.value)}\n            text='Ex.: roberto@gmail.com'\n            name='Email'\n        />\n\n        <Link to={routes.signin} className='anchor'>\n            Já tenho uma conta. Me tire daqui!\n        </Link>\n\n        <Button\n            type='submit'\n            color='purple'\n        />\n    </Form>\n);\n\nexport default Holder;","import React, { useState } from 'react';\n\nimport Holder from '../components/forms/signup';\n\nexport default function Signup() {\n    const [userEmail, setUserEmail] = useState('');\n    const [userName, setUserName] = useState('');\n\n    return (\n        <Holder\n            name={{value: userName, changer: setUserName}}\n            email={{value: userEmail, changer: setUserEmail}}\n        />\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { removeStorage } from '../helpers/auth';\n\nimport * as actions from '../actions/useraction';\n\nfunction Signout({ toggleLogged }) {\n    const [redirect, setRedirect] = useState(false);\n\n    useEffect(() => {\n        removeStorage('user');\n        toggleLogged(false);\n        setRedirect(true);\n    }, [toggleLogged]);\n\n    return (\n        <>\n            { redirect && <Redirect to='/' />}\n        </>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    logged: state.logged\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    toggleLogged: b => dispatch(actions.toggleLogged(b))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signout);","import React from 'react';\n\nconst Select = ({ value, changer, name, options}) => (\n    <div className='form__holder--input'>\n        <label htmlFor={name}>{name}</label>\n        <select\n            className='form__input'\n            value={value}\n            onChange={changer}\n            id={name}\n        >\n            {options.map((option, i) => \n                <option key={`select-option-${i}`}\n                    value={option.value}\n                >{option.text}</option>\n            )}\n        </select>\n    </div>\n);\n\nexport default Select;","import React from 'react';\n\nimport Form from '../modular/form';\nimport Input from '../modular/input';\nimport Select from '../modular/select';\nimport Button from '../modular/button';\n\nconst Holder = ({ section, item, quantity, type, handleAdd }) => (\n    <Form title='Cadastro de Item'>\n        <Select\n            value={section.value}\n            changer={e => section.changer(e.currentTarget.value)}\n            name='Setor'\n            options={[\n                { value: 'mercearia', text: 'Mercearia' },\n                { value: 'acougue', text: 'Açougue' },\n                { value: 'frios', text: 'Frios' },\n                { value: 'adega', text: 'Adega' },\n                { value: 'higiene', text: 'Higiene' },\n                { value: 'horti', text: 'Hortifruti' },\n                { value: 'padaria', text: 'Padaria' },\n                { value: 'rotisseria', text: 'Rotisseria' }\n            ]}\n        />\n\n        <Input\n            type='text'\n            value={item.value}\n            changer={e => item.changer(e.currentTarget.value)}\n            text='Ex.: Tomate'\n            name='Produto'\n        />\n\n        <Input\n            type='number'\n            value={quantity.value}\n            changer={e => quantity.changer(e.currentTarget.value)}\n            text='Ex.: 10'\n            name='Quantidade'\n        />\n\n        <Select\n            value={type.value}\n            changer={e => type.changer(e.currentTarget.value)}\n            name='Unidade'\n            options={[\n                { value: 'kg', text: 'Kg' },\n                { value: 'un', text: 'Unidade' }\n            ]}\n        />\n\n        <div style={{ textAlign: 'center', marginTop: '32px' }}>\n            <Button\n                type='submit'\n                color='purple'\n                text='Adicionar Item'\n                handler={handleAdd}\n            />\n        </div>\n    </Form>\n);\n\nexport default Holder;","import React from 'react';\n\nconst Emoji = ({ icon, description, handler }) => (\n    <span \n        role='img' \n        aria-label={description} \n        title={description}\n        onClick={handler}\n    >\n        {EmojiList[icon]}\n    </span>\n);\n\nconst EmojiList = {\n    'laptop': <>&#128187;</>,\n    'book': <>&#128214;</>,\n    'market': <>&#128722;</>,\n    'phone': <>&#128226;</>,\n    'doc': <>&#128221;</>,\n    'exit': <>&#10060;</>,\n    'pencil': <>&#128397;</>\n};\n\nEmoji.defaultProps = {\n    handler: () => null\n};\n\nexport default Emoji;","import React from 'react';\n\nimport Button from '../modular/button';\nimport Emoji from '../modular/emoji';\n\nconst Aside = ({ products, handler, store, submit, expand }) => (\n    <aside className='aside'>\n        <div className={`holder--product ${expand.text === 'Fechar' && 'slide--down'}`}>\n            {products.map((product, i) => (\n                <div key={`product-${i}`} className='product' data-id={i}>\n                    <h4 className='product__title'>\n                        {product.item}\n                        <Emoji icon={'exit'} description={'excluir'} handler={handler} />\n                    </h4>\n\n                    <div className='product__description'>\n                        <small>{product.section}</small>\n                        <small>{product.quantity}</small>\n                        <small>{product.type}</small>\n                    </div>\n                </div>\n            ))}\n        </div>\n        <div className='aside__bottom'>\n            <span \n                className='aside__expand' \n                onClick={() => expand.handle(expand.text === 'Expandir' ? 'Fechar' : 'Expandir')}>\n                    {expand.text}\n            </span>\n            <input\n                type='text'\n                value={store.value}\n                onChange={e => store.changer(e.currentTarget.value)}\n                placeholder={'Nome do Mercado'}\n                style={{ width: '100%' }}\n                minLength={4}\n                required\n            />\n\n            <Button\n                type='submit'\n                text='Salvar Lista'\n                size='full'\n                handler={submit}\n            />\n        </div>\n    </aside>\n);\n\nexport default Aside;","import React, { useCallback, useEffect, useState } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { saveDataStorage, getDataStorage, removeStorage } from '../helpers/auth';\nimport { sendData } from '../helpers/fetch';\nimport { baseLink, links } from '../helpers/routes';\nimport * as actions from '../actions/itemaction';\n\nimport Holder from '../components/forms/newlist';\nimport Aside from '../components/modular/aside';\n\nfunction NewList({ itemsProps, addItem, removeItem, clearItem }) {\n    const [store, setStore] = useState('');\n    const [section, setSection] = useState('mercearia');\n    const [item, setItem] = useState('');\n    const [quantity, setQuantity] = useState(0);\n    const [type, setType] = useState('kg');\n    const [id, setId] = useState(0);\n    const [redirect, setRedirect] = useState(false);\n\n    const [expand, setExpand] = useState('Expandir');\n\n    const { ID } = useParams();\n\n    const handleAdd = () => {\n        setId(prevCounter => prevCounter + 1);\n\n        const itemDetails = { section, item, quantity, type, id }\n        \n        updateStorage(itemDetails);\n        resetFields();\n        addItem(itemDetails);\n    };\n\n    const updateStorage = item => {\n        let storage = getDataStorage('list') || false;\n\n        if(storage) {\n            storage = [...storage, item];\n            saveDataStorage('list', storage);\n        } else saveDataStorage('list', [item]);\n    };\n\n    const resetFields = () => {\n        setSection('mercearia');\n        setItem('');\n        setQuantity(0);\n        setType('kg');\n    };\n\n    const restoreStorage = useCallback(() => {\n        const storage = getDataStorage('list') || false;\n\n        if(storage && !itemsProps.length) {\n            setId(storage.length);\n\n            for(let s of storage) {\n                addItem(s);\n            }\n        }\n    }, [addItem, itemsProps]);\n\n    const removeItemFromList = e => {\n        const parent = e.currentTarget.parentNode.parentNode;\n        const parentId = parent.dataset.id;\n        const dataStorage = itemsProps.filter((data, i) => i !== +parentId);\n\n        saveDataStorage('list', dataStorage);\n        removeItem(parentId);\n    };\n\n    const handleSubmit = () => {\n        let jsonData = {\n            store,\n            section: [],\n            item: [],\n            type: [],\n            quantity: []\n        }\n\n        const user = getDataStorage('user');\n        const sendLink = ID\n        ? baseLink + links.items.base + '/' + ID\n        : baseLink + links.items.base + links.items.new;\n        const method = ID ? 'PUT' : 'POST';\n\n        if(store && store.length >= 4) {\n            for(let i of itemsProps) {\n                jsonData.section.push(i.section);\n                jsonData.item.push(i.item);\n                jsonData.type.push(i.type);\n                jsonData.quantity.push(i.quantity);\n            }\n\n            sendData(\n                sendLink,\n                JSON.stringify({ email: user.email, ...jsonData }),\n                method,\n                user.token\n            )\n            .then(data => {\n                if(!data.error) {\n                    removeStorage('list');\n                    setRedirect(true);\n                }\n            });\n        }\n    };\n\n    useEffect(() => {\n        restoreStorage();\n    }, [restoreStorage]);\n\n    useEffect(() => {\n        clearItem()\n    }, [clearItem]);\n\n    return (\n        <div className='holder--list'>\n            <Aside \n                products={itemsProps} \n                handler={removeItemFromList} \n                store={{value: store, changer: setStore}}\n                submit={handleSubmit}\n                expand={{ text: expand, handle: setExpand }}\n            />\n\n            <Holder\n                type={{value: type, changer: setType}}\n                section={{value: section, changer: setSection}}\n                quantity={{value: quantity, changer: setQuantity}}\n                item={{value: item, changer: setItem}}\n                handleAdd={handleAdd}\n            />\n\n            { redirect && <Redirect to='/' />}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    itemsProps: state.item\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addItem: item => dispatch(actions.addItem(item)),\n    removeItem: id => dispatch(actions.removeItem(id)),\n    clearItem: () => dispatch(actions.clearItem())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewList);","import * as actions from './actiontypes';\n\nexport const addItem = item => ({\n    type: actions.ADD_ITEM,\n    item\n});\n\nexport const removeItem = id => ({\n    type: actions.REMOVE_ITEM,\n    id\n});\n\nexport const clearItem = () => ({\n    type: actions.CLEAR_ITEM\n});","import React from 'react';\n\nimport Emoji from './emoji';\n\nconst Table = ({ item, i, obj, remove, edit }) => (\n    <table className='table' key={`table-${i}`}>\n        <thead>\n            <tr>\n                <td className='text--light text--bold text--shadow text--small' colSpan={3}>\n                    Mercado: {item.store} -&nbsp;\n                    {new Date(+item.updatedAt).toLocaleDateString()}\n                </td>\n\n                <td className='d--flex justify--evenly clicable'>\n                    <Emoji icon={'pencil'} description={'Editar'} handler={() => edit(item.id)} />\n                    <Emoji icon={'exit'} description={'Excluir'} handler={() => remove(item.id)} />\n                </td>\n            </tr>\n            <tr>\n                <th>Seção</th>\n                <th>Item</th>\n                <th>Qtd</th>\n                <th>Und</th>\n            </tr>\n        </thead>\n        <tbody>\n            {obj.map((product, i) => (\n                <tr key={`product-${i}`}>\n                    <td>{product.section}</td>\n                    <td>{product.item}</td>\n                    <td>{product.quantity}</td>\n                    <td>{product.type}</td>\n                </tr>\n            ))}\n        </tbody>\n    </table>\n);\n\nexport default Table;","import React, { useCallback, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { getData, sendData } from '../helpers/fetch';\nimport { baseLink, links } from '../helpers/routes';\nimport { getDataStorage, saveDataStorage } from '../helpers/auth';\n\nimport Table from '../components/modular/table';\nimport Modal from '../components/modular/modal';\n\nexport default function Main() {\n    const [itemList, setItemList] = useState(false);\n    const [user, setUser] = useState(false);\n    const [deleteId, setDeleteId] = useState(false);\n    const [modal, setModal] = useState({\n        title: 'Tem certeza que deseja excluir?',\n        visible: false\n    });\n\n    const [redirect, setRedirect] = useState(false);\n\n    const items = useCallback(() => {\n        if(user) {\n            const link = `${baseLink}${links.items.base}/${user.id}`;\n\n            getData(link, user.token)\n            .then(data => setItemList(data));\n        }\n    }, [user]);\n\n    const showModal = id => {\n        setDeleteId(id);\n        setModal({ ...modal, visible: true });\n\n        console.log(id);\n    };\n\n    const remove = () => {\n        sendData(\n            baseLink + links.items.base + '/' + deleteId,\n            null,\n            'DELETE',\n            user.token\n        )\n        .then(data => window.location.reload());\n    };\n\n    const edit = id => {\n        const buyList = itemList.filter((item) => item.id === id);\n        const list = rebuildList(buyList[0]);\n\n        saveDataStorage('list', list);\n        setDeleteId(id);\n        setRedirect(true);\n    };\n\n    useEffect(() => setUser(getDataStorage('user')), []);\n    useEffect(() => items(), [items]);\n\n    return (\n        <div className='holder--table'>{itemList \n            ? itemList.map((item, i) => \n            <Table \n                item={item} \n                i={i} \n                obj={rebuildList(item)}\n                remove={showModal}\n                key={i}\n                edit={edit}\n            />)\n            : 'main'}\n\n            {modal.visible && <Modal title={modal.title} verifySign={remove}>\n                <p style={{ marginBottom: '16px' }}>Deseja excluir?</p>\n            </Modal>}\n\n            {redirect && <Redirect to={`/edit/${deleteId}`} />}\n        </div>\n    )\n}\n\nconst rebuildList = list => {\n    let newList = [];\n    const parseItems = JSON.parse(list.items);\n\n    for(let i = 0; i < parseItems.section.length; i++) {\n        let json = {\n            section: parseItems.section[i],\n            item: parseItems.item[i],\n            type: parseItems.type[i],\n            quantity: parseItems.quantity[i]\n        };\n\n        newList.push(json);\n    }\n\n    return newList.sort((a, b) => a.section.localeCompare(b.section));\n};","import React from 'react';\n\nconst Container = ({ children }) => (\n    <div className='container'>\n        {children}\n    </div>\n);\n\nexport default Container;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Emoji from './emoji';\n\nconst Nav = ({ title, options }) => (\n    <nav className='nav'>\n        <ul className='nav__list'>\n            <li>\n                <Link to={title.route} className='nav__title'>\n                    <Emoji description={title.description} icon={title.icon} />\n                    &nbsp; {title.text}\n                </Link>\n            </li>\n            <li className='text--right'>\n                <ul className='nav__list'>\n                    {options.map((option, index) => (\n                        <li className='small' key={`option-${index}`}>\n                            <Link to={option.route}>\n                                <Emoji description={option.descrition} icon={option.icon} />\n                                &nbsp; {option.text}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            </li>\n        </ul>\n    </nav>\n);\n\nexport default Nav;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport Nav from './nav';\nimport { routes } from '../../helpers/routes';\nimport * as userAction from '../../actions/useraction';\nimport { isAuthenticated } from '../../helpers/auth';\n\nfunction Navbar({ user, toggleLogged }) {\n    const title = { text: 'SuperLista', icon: 'market', description: 'titulo do site', route: routes.main };\n\n    const options = user.logged \n    ? [\n        { text: 'Nova Lista', icon: 'doc', description: 'minhas compras', route: routes.new},\n        { text: 'Sair', icon: 'exit', description: 'sair', route: routes.signout}\n    ] \n    : [\n        { text: 'Sobre Nós', icon: 'book', description: 'sobre', route: '/about' },\n        { text: 'Contato', icon: 'phone', description: 'contate-nos', route: '/contact' },\n        { text: 'API', icon: 'laptop', description: 'api', route: '/api' }\n    ];\n\n    useEffect(() => {\n        if(isAuthenticated('user')) {\n            toggleLogged(true);\n        }\n    }, [toggleLogged]);\n\n    return (\n        <Nav\n            title={title}\n            options={options}\n        />\n    )\n};\n\nconst mapStateToProps = state => ({\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    toggleLogged: b => dispatch(userAction.toggleLogged(b))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","import React from 'react';\nimport {\n\tBrowserRouter,\n\tSwitch,\n\tRoute\n} from 'react-router-dom';\nimport './sass/style.scss';\n\nimport PrivateRoute from './routes/privateroute';\nimport NotFound from './routes/notfound';\nimport Signin from './routes/signin';\nimport Signup from './routes/signup';\nimport Signout from './routes/signout';\nimport NewList from './routes/newlist';\nimport Main from './routes/main';\n\nimport Container from './components/modular/container';\nimport Navbar from './components/modular/navbar';\n\nimport { routes } from './helpers/routes';\n\nfunction App() {\n\treturn (\n\t\t<Container>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Navbar />\n\t\t\t\t<Switch>\n\t\t\t\t\t<PrivateRoute exact path={routes.main}>\n\t\t\t\t\t\t<Main />\n\t\t\t\t\t</PrivateRoute>\n\n\t\t\t\t\t<PrivateRoute exact path={routes.signout}>\n\t\t\t\t\t\t<Signout />\n\t\t\t\t\t</PrivateRoute>\n\n\t\t\t\t\t<PrivateRoute exact path={routes.new}>\n\t\t\t\t\t\t<NewList />\n\t\t\t\t\t</PrivateRoute>\n\n\t\t\t\t\t<PrivateRoute path={routes.edit}>\n\t\t\t\t\t\t<NewList />\n\t\t\t\t\t</PrivateRoute>\n\n\t\t\t\t\t<Route path={routes.signin}>\n\t\t\t\t\t\t<Signin />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path={routes.signup}>\n\t\t\t\t\t\t<Signup />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path='*'>\n\t\t\t\t\t\t<NotFound />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './userreducer';\nimport item from './itemreducer';\n\nexport default combineReducers({ user, item });","import * as actions from '../actions/actiontypes';\n\nexport default (state = { logged: false }, action) => {\n    switch (action.type) {\n        case actions.TOGGLE_LOGGED:\n            return {\n                ...state,\n                logged: action.logged\n            };\n        default:\n            return state;\n    }\n};","import * as actions from '../actions/actiontypes';\n\nexport default (state = [], action) => {\n    switch (action.type) {\n        case actions.ADD_ITEM:\n            return [\n                ...state,\n                action.item\n            ];\n\n        case actions.REMOVE_ITEM:\n            return state.filter((item, i) => i !== +action.id);\n\n        case actions.CLEAR_ITEM:\n            return [];\n\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './configurestore';\n\nconst store = configureStore();\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nexport default function configureStore(initialState) {\n    return createStore(rootReducer, initialState);\n}"],"sourceRoot":""}